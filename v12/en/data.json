{
    "version":"0.1",
    "pageContent":{
      "_comments":"JSON object that contains data for page labels, buttons, etc.",
      "navItems":{
        "_common":{
          "buttonBackToGallery":{
            "name":"Back To Gallery",
            "method":"backToGallery()",
            "idName":"backToGallery"
          },
          "buttonStartTutorial":{
            "name":"Start Tutorial",
            "method":"startTutorialFromDetailsScreen()",
            "idName":"startTutorial"
          },
          "buttonViewDetails":{
            "name":"View Details",
            "method":"viewDetails()",
            "idName":"stepsViewDetails"
          }
        }
      }
    },
	"tutorial":{
      "_common":{
        "name":"Commands - Using the ibmint command to package BAR files, apply overrides and deploy",
        "shortDescription":"Learn how to use the ibmint command to prepare and deploy integration artifacts outside of the IBM App Connect Enterprise Toolkit",
        "durationText":"This tutorial takes approximately",
        "durationTime":"5 minutes",
        "_resourceToOpenComment":"The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
        "resourceToOpen":"MyDemoFlow",
        "helpLink":{
          "text":"IBM Knowledge Center",
          "link":"https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/acesw_home.html"
        }
      },
      "pageDetails":{
        "topicsName":"Tutorial Topics",
        "_topicListComment":"A short list of product concepts or tasks demonstrated by this tutorial",
        "topicList":[
          {
            "title":"The ibmint command"
          },
          {
            "title":"Compute node"
          }
        ],
        "outcomesName":"Learning outcomes",
        "_outcomesComment":"Start learning some product basics with a very simple Toolkit use case",
        "outcomeList":[
          {
            "title":"Use the ibmint command to package and deploy a BAR file"
          }
        ],
        "summary":{
          "overviewName":"OVERVIEW",
          "_overviewComment":"A short description of what happens in this tutorial, and an optional short explanation of the IIB concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
          "sections":[
            {
              "section":"This tutorial demonstrates how to use the ibmint command to package and deploy a BAR file. Similar tasks are executed as part of automated deployment pipelines for the IBM App Connect Enterprise product, so this tutorial may be especially helpful for anyone wishing to administer the product or learn more about how to automate the preparation of the runtime environment. The focus of this tutorial is not on the development process itself, so integration artifacts are provided which demonstrate some of the basic project types which are available including an application (containing a message flow, a graphical map and some test data), a Java project and a shared library (containing XML schemas which represent the input and output data)."
            },
            {
              "section":"In App Connect Enterprise, message flows can be used to transform input data structures into output data structures, or create entirely new data structures from scratch. The message flow uses a graphical mapping node to upper-case the string values carried in three fields in the input message. The JavaCompute node enhances the output data structure with information about the operating environment including the Operating System where IBM App Connect Enterprise is running, the name of the Application, the name of the Message Flow and a value taken from the message flow User Defined Property named RuntimeEnvironmentDescription. The value of this property is intended to be overridden by the deployment process (using a setting in the BAR file) when deployed to a particular environment such as Development, Test, or Production."
            }
          ]
        }
      },
      "pageSteps":{
        "create":{
          "overview":{
            "name":"Create",
            "heading":"Import project",
            "_createComment":"A description of what will happen when the user clicks Import.",
            "sections":[
              {				  
                "section":"Unlike most other tutorials, you are recommended to start this tutorial from an empty workspace. The reason for this advice, is that the tutorial includes running the ibmint package command which will scan your workspace to discover projects that can be built ready for deployment. Starting from a workspace which contains other projects could cause you to encounter other unexpected outputs or errors, so to keep the tutorial as easy as possible to follow it's best to start from a clean workspace."				  
				  },
				  {
                "section":"Click <span class='uicontrol'>Import</span> and the following projects will be imported into your workspace:<br>The application named <span class='uicontrol'>MyDemoApplication</span><br>The java project named <span class='uicontrol'>MyDemoApplicationJava</span>The shared library named <span class='uicontrol'>MyDemoSharedLibrary</span>"
              },
              {
                "section":"The <span class='uicontrol'>MyDemoFlow</span> message flow will be opened for you."
              }
            ]
          },
          "helpLinks":{
            "title":"Find out more",
            "details":[
              {
                "title":"IBM Documentation link to ",
                "description":"Developing integration solutions from scratch",
                "link":"https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/bi12002_.htm",
                "type":"web"
              }
            ]
          },
          "actions":{
            "title":"Create Actions",
            "details":[
              {
                "name":"Import",
                "method":"importArtifacts()"
              }
            ]
          }
        },
        "prepare":{
          "overview":{
            "name":"Prepare",
            "heading":"Explore the provided integration artifacts",
            "_prepareComment":"Creating an IntegrationServer:",
            "sections":[
              {
                "section":"",
                "steps":{
                  "type":"ordered",
                  "details":[
                    {
                      "details":"The main focus of this tutorial is to demonstrate how you can take integration artifacts which have been developed and prepare them for the IBM App COnnect Enterprise runtime. These actions will be described in detail in the <b>Run</b> section of this tutorial, but before moving to that section if you are interested in the provided development artifacts, they are described below."
                    },
                    {
                      "details":"The message flow named MyDemoFlow expects to receive an XML message over HTTP which looks like this:<br><br><code>&lt;input:InputMessage xmlns:input=\"http://www.example.org/MyDemoInput\"&gt;<br>&lt;input:Field1&gt;this&lt;/input:Field1&gt;<br>&lt;input:Field2&gt;gets&lt;/input:Field2&gt;<br>&lt;input:Field3&gt;uppercased&lt;/input:Field3&gt;<br>&lt;/input:InputMessage&gt;</code><br><br>This input is transformed into an output message which looks like this:<br><br><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;<br>&lt;output:OutputMessage xmlns:output=\"http://www.example.org/MyDemoOutput\"&gt;<br>  &lt;output:Field1&gt;THIS&lt;/output:Field1&gt;<br>  &lt;output:Field2&gt;GETS&lt;/output:Field2&gt;<br>  &lt;output:Field3&gt;UPPERCASED&lt;/output:Field3&gt;<br>  &lt;output:OperatingEnvironment&gt;<br>    &lt;output:OperatingSystem&gt;Windows 8&lt;/output:OperatingSystem&gt;<br>    &lt;output:ApplicationName&gt;MyDemoApplication&lt;/output:ApplicationName&gt;<br>    &lt;output:MessageFlowName&gt;MyDemoFlow&lt;/output:MessageFlowName&gt;<br>    &lt;output:RuntimeEnvironmentDescription&gt;ThisPropertyHasNoOverrideApplied&lt;/output:RuntimeEnvironmentDescription&gt;<br>  &lt;/output:OperatingEnvironment&gt;<br>&lt;/output:OutputMessage&gt;</code><br><br> As you can see, the message flow takes the string values carried by Field1, Field2 and Field3 and uppercases them. This is done by the graphical mapping node in the message flow. Extra fields are added to a section in the output message which describe the operating environment in which the message flow is running. This is done by the JavaCompute node in the message flow."
                    }
                  ]
                }
              }
            ]
          }
        },
        "run":{
          "overview":{
            "name":"Run",
            "heading":"Test the message flow using the local Integration Server",
            "_runComment":"The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
            "sections":[
              {
                "section":"",
                "steps":{
                  "type":"ordered",
                  "details":[
                    {
                      "details":"If you happen to have a local integration server whose working directory is defined in your workspace, then you will need to ensure it is stopped before running the commands which follow. Running integation servers lock some of the files in their working directory (such as log and trace files for example), so to avoid errors about the ibmint package command not being able to access files due to them being locked by another process, you should stop the server before executing the <code>ibmint package</code> command. Open an IBM App Connect Enterprise command console and execute the following command, using your Toolkit workspace as the value for the <b>--input-path</b> parameter, and an appropriate file path for the <b>--output-bar-file</b> parameter. For example on a Windows system:<br><code>ibmint package --input-path C:\\MyWorkspace --output-bar-file C:\\temp\\MyDemo.bar</code><br><br>The command will attempt to scan the directory specified by the <b>--input-path parameter</b> looking for resources which can be compiled and packaged. You should receive command output that looks a bit like this:<br><code>C:\\Program Files\\IBM\\ACE\\12.0.1.0>ibmint package --input-path C:\\MyWorkspace --output-bar-file C:\\temp\\MyDemo.bar<br>BIP8409I: Compiling Java project '\\\\?\\C:\\MyWorkspace\\MyDemoApplicationJava'<br>BIP1859I: Successfully added file 'application.descriptor' to the BAR file.<br>BIP1859I: Successfully added file 'MyDemoFlow.msgflow' to the BAR file.<br>BIP1859I: Successfully added file 'MyDemoFlow_inputMessage.xml' to the BAR file.<br>BIP1859I: Successfully added file 'MyDemoFlow_Mapping.map' to the BAR file.<br>BIP1859I: Successfully added file 'MyDemoApplicationJava.jar' to the BAR file.<br>BIP1853I: Application file 'MyDemoApplication.appzip' successfully added to the BAR file.<br>BIP8071I: Successful command completion.</code><br>Next, we will demonstrate how to apply overrides into your BAR file using the ibmint command. To do this, you will need a file containing the overrides in the standard IBM App Connect Enterprise format. The provided message flow (MyDemoFlow) contains a user defined property named <b>RuntimeEnvironmentDescription</b>, which we will override to take the value <b>DevelopmentEnvironment</b>. This override is expressed as shown below:<br><br><code>MyDemoFlow#RuntimeEnvironmentDescription=DevelopmentEnvironment</code><br><br>Save the above content into a file, such as <b>C:\\temp\\DemoPropertyOverridesFile.txt</b> for example. Execute the following command to apply the override:<br><br><code>ibmint apply overrides C:\\temp\\DemoPropertyOverridesFile.txt --bar-file C:\\temp\\MyDemo.bar</code><br><br>Deploy the BAR file using the ibmint deploy command<br><br><code>ibmint deploy --input-bar-file C:\\temp\\MyDemo.bar --output-work-directory C:\\temp\\DemoIntegrationServer</code><br><br>An alternative to scripting the three separate ibmint commands described above, would be to not even use a BAR file, and to combine all of the actions into a single command which takes your source files and directly prepares the integration server's working directory:<br><br><code>ibmint deploy --input-path C:\\MyWorkspace --overrides-file C:\\temp\\DemoPropertyOverridesFile.txt --output-work-directory C:\\temp\\DemoIntegrationServer</code>"
                    },
					{
						"details":"This tutorial has shown how to use the ibmint command to prepare and deploy integration artifacts outside of the IBM App Connect Enterprise Toolkit."
					}				
                  ]
                }
              }
            ]
          }
        }
      }
    }		
  }